; Intercambiar e invertir las ubicaciones en memoria de dos arreglos de datos [ai] y [bi], de manera que el
; primer dato de un arreglo pase a ser el último dato del otro arreglo y así sucesivamente hasta el final. Los
; arreglos son de 20 elementos de 32 bits y están cargados en memoria a partir de las direcciones 1000h y
; 1100h respectivamente.

b) Determinar dónde se producen riesgos de datos y de control suponiendo que el diseño del uP no incluye
anticipación (forwarding) o atajos o cortocircuitos. Determinar la cantidad y ubicación de las detenciones
en el flujo de las instrucciones que debe efectuar el uP para resolver las dependencias de datos.
c) Reordenar el código para tratar de reducir la cantidad de detenciones o bien eliminarlas.
d) Desenrollar el bucle una cantidad de veces de manera de reducir la cantidad de detenciones o bien eliminarlas.


		.data 0x1000
a:		.word 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 ; arreglo [ai] de 20 elementos
		.data 0x1100
b:		.word 21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40 ; arreglo [bi] de 20 elementos
		.text 0x100																	; comienzo del código
1 main:	ADDI r2, r0, #0x1000	|IF|ID|EX|ME|WB|												; r2 apunta al vector [ai]
2 		ADDI r3, #b, #20		   |IF|ID|EX|ME|WB|												; r3 apunta al final del vector [bi] (1100h + 20*4 = 1140h)
3 		ADDI r4, r0, #20 		      |IF|ID|EX|ME|WB|											; r4 es el contador de iterar
4 iterar: 	LW r5, 0(r2) 			     |IF|ID|EX|ME|WB|										; cargar en	 r5 el elemento ai
5 		LW r6, 0(r3) 					    |IF|ID|EX|ME|WB|									; cargar en r6 el elemento bi (desde el final hacia el principio)
6 		SW 0(r3), r5 						   |IF|ID|EX|ME|WB|									; almacenar el elemento ai en la posición de bi
7 		SW 0(r2), r6 						      |IF|ID|EX|ME|WB|								; almacenar el elemento bi en la posición de ai
8 		ADDI r2, r2, #4 							 |IF|ID|EX|ME|WB|							; incrementar r2 en 4 para apuntar al próximo dato (elemento ai).
9 		SUBI r3, r3, #4 								|IF|ID|EX|ME|WB|						; decrementar r3 en 4 para apuntar al próximo dato (elemento bi).
10 		SUBI r4, r4, #1 								   |IF|ID|EX|ME|WB|						; decrementar en 1 el contador de iterar.
11		BNEZ r4, iterar                                       |IF|ID|EX|ME|WB|
12 		TRAP 0

b) Riesgos de datos y de control:
- Instrucción 6 (SW 0(r3), r5) depende de la instrucción 4 (LW r5, 0(r2)) -> 1 ciclo de detención.
- Instrucción 7 (SW 0(r2), r6) depende de la instrucción 5 (LW r6, 0(r3)) -> 1 ciclo de detención.
- Instrucción 11 (BNEZ r4, iterar) depende de la instrucción 10 (SUBI r4, r4, #1) -> 2 ciclos de detención.
Cantidad total de detenciones: 4 * 20 iteraciones = 80 detenciones. + 1 detención final por riesgo de control = 81 detenciones en total.
Solucion con NOP desde main:
1 main:	ADDI r2, r0, #0x1000
2 		ADDI r3, #b, #20
3 		ADDI r4, r0, #20
4 iterar: 	LW r5, 0(r2)
5 		LW r6, 0(r3)
		NOP
6 		SW 0(r3), r5
		NOP
7 		SW 0(r2), r6
8 		ADDI r2, r2, #4
9 		SUBI r3, r3, #4
10 		SUBI r4, r4, #1
		NOP
		NOP
11		BNEZ r4, iterar
12 		TRAP 0

c) Código reordenado para reducir detenciones desde main:
1 main:	ADDI r2, r0, #0x1000	|IF|ID|EX|ME|WB|	
2 		ADDI r3, #b, #20		   |IF|ID|EX|ME|WB|	
3 		ADDI r4, r0, #20 		      |IF|ID|EX|ME|WB|	
4 iterar: 	LW r5, 0(r2) 		         |IF|ID|EX|ME|WB|	
10 		SUBI r4, r4, #1 		            |IF|ID|EX|ME|WB|	
5 		LW r6, 0(r3) 			               |IF|ID|EX|ME|WB|	
6 		SW 0(r3), r5 			                  |IF|ID|EX|ME|WB|	
9 		SUBI r3, r3, #4 		                     |IF|ID|EX|ME|WB|	
7 		SW 0(r2), r6 			                        |IF|ID|EX|ME|WB|	
8 		ADDI r2, r2, #4 		                           |IF|ID|EX|ME|WB|	
11		BNEZ r4, iterar     	                              |IF|ID|EX|ME|WB|	
12 		TRAP 0					                                 |IF|ID|EX|ME|WB|

d) Desenrollado del bucle 5 veces desde main:
1 main:	ADDI r2, r0, #0x1000
2 		ADDI r3, #b, #20	
3 		ADDI r4, r0, #20 
4 iterar: 	LW r5, #0x1000(r2) 	
5 		LW r6, #0x1004(r2) 		
6 		LW r7, #0x1008(r2)		
7 		LW r8, #0x10012(r2) 	
8 		LW r9, #0x10016(r2)		
9 		LW r10, r3 	
10		LW r11, -4(r3)		
11		LW r12, -8(r3)		
12		LW r13, -12(r3)		
13		LW r14, -16(r3)		
14		SUBI r3, r3, #20 
15		ADDI r2, r2, #20 		
16		SUBI r4, r4, #5			
17		SW 20(r3), r5 			
18		SW 16(r3), r6 			
19		SW 12(r3), r7 			
20		SW 8(r3), r8 			
21		SW 4(r3), r9 			
22		SW -20(r2), r10 		
23		SW -16(r2), r11 		
24		SW -12(r2), r12 		
25		SW -8(r2), r13 			
26		SW -4(r2), r14 			
27		BNEZ r4, iterar	
28		NOP		
29		TRAP 0	
; Como hemos desenrollado 5 veces el bucle, el lazo se ejecuta 4 veces y no hay en él ninguna detención debido a dependencias de datos. Solo queda la detención por riesgo de control en la instrucción 28.