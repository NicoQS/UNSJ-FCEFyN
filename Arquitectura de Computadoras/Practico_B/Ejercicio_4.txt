; Intercambiar las ubicaciones en memoria de dos arreglos de datos [ai] y [bi] de 32 bits y 15 elementos
; cargados en memoria a partir de las direcciones 1000h y 1200h respectivamente.

b) Determinar dónde se producen riesgos de datos y de control suponiendo que el diseño del uP no incluye
anticipación (forwarding) o atajos o cortocircuitos. Determinar la cantidad y ubicación de las detenciones
en el flujo de las instrucciones que debe efectuar el uP para resolver las dependencias de datos.
c) Reordenar el código para tratar de reducir la cantidad de detenciones o bien eliminarlas.
d) Desenrollar el bucle una cantidad de veces de manera de reducir la cantidad de detenciones o bien
eliminarlas.

		.data 0x1000
a:		.word 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ; arreglo [ai] de 15 elementos
		.data 0x1200
b:		.word 16,17,18,19,20,21,22,23,24,25,26,27,28,29,30 ; arreglo [bi] de 15 elementos
		.text 0x100				; comienzo del código
1 main:	ADDI r2, r0, #0x1000	|IF|ID|EX|ME|WB| 										
2 		ADDI r3, r0, #0x1200	   |IF|ID|EX|ME|WB|		 									
3 		ADDI r4, r0, #15 		      |IF|ID|EX|ME|WB|											
4 iterar: 	LW r5, 0(r2) 			     |IF|ID|EX|ME|WB|													
5 		LW r6, 0(r3) 				        |IF|ID|EX|ME|WB|									
6 		SW 0(r3), r5 					       |IF|ID|EX|ME|WB|						
7 		SW 0(r2), r6 						      |IF|ID|EX|ME|WB|							
8 		ADDI r2, r2, #4 						     |IF|ID|EX|ME|WB|	
9 		ADDI r3, r3, #4 							    |IF|ID|EX|ME|WB|	
10 		SUBI r4, r4, #1 								   |IF|ID|EX|ME|WB|			
11 		BNEZ r4, iterar										  |IF|ID|EX|ME|WB|		
12 		TRAP 0

b) Riesgos de datos y de control:
- Instrucción 6 (SW 0(r3), r5) depende de la instrucción 4 (LW r5, 0(r2)) -> 1 ciclo de detención.
- Instrucción 7 (SW 0(r2), r6) depende de la instrucción 5 (LW r6, 0(r3)) -> 1 ciclo de detención.
- Instrucción 11 (BNEZ r4, iterar) depende de la instrucción 10 (SUBI r4, r4, #1) -> 2 ciclos de detención.
- Para solucionar los riesgos de datos y de control sin modificar el orden de las instrucciones, es necesario detener el cauce:
 * 1 ciclo entre las instrucciones 4 y 6.
 * 1 ciclo entre las instrucciones 5 y 7.
 * 2 ciclos entre las instrucciones 10 y 11.
 * 1 ciclo después de la instrucción 11.
Cantidad total de detenciones: 4 * 15 iteraciones = 60 detenciones. + 1 detención final por riesgo de control = 61 detenciones en total.

Solucion con NOP desde main:
1 main:	ADDI r2, r0, #0x1000
2 		ADDI r3, r0, #0x1200
3 		ADDI r4, r0, #15 	
4 iterar: 	LW r5, 0(r2) 	
5 		LW r6, 0(r3) 		
6 		SW 0(r3), r5
		NOP
7 		SW 0(r2), r6
		NOP		
8 		ADDI r2, r2, #4 	
9 		ADDI r3, r3, #4 	
10 		SUBI r4, r4, #1 
		NOP
		NOP
11 		BNEZ r4, iterar	
		NOP
12 		TRAP 0

c) Código reordenado para reducir detenciones desde main:
1 main:	ADDI r2, r0, #0x1000	|IF|ID|EX|ME|WB| 								
2 		ADDI r3, r0, #0x1200	   |IF|ID|EX|ME|WB|		 					
3 		ADDI r4, r0, #15 		      |IF|ID|EX|ME|WB|						
4 iterar: 	LW r5, 0(r2) 			     |IF|ID|EX|ME|WB|					
5 		LW r6, 0(r3) 				        |IF|ID|EX|ME|WB|				
10 		SUBI r4, r4, #1 				       |IF|ID|EX|ME|WB|				
6 		SW 0(r3), r5 						      |IF|ID|EX|ME|WB|			
9 		ADDI r3, r3, #4 						     |IF|ID|EX|ME|WB|	
7 		SW 0(r2), r6 								    |IF|ID|EX|ME|WB|	
8 		ADDI r2, r2, #4									   |IF|ID|EX|ME|WB|	
11 		BNEZ r4, iterar										  |IF|ID|EX|ME|WB|
12		NOP

; Se reduce la cantidad de detenciones a 1 en total por el riesgo de control de la instruccion  11.

d) Código desenrollado 5 veces desde main:
1 main:	ADDI r2, r0, #0x1000	
2 		ADDI r3, r0, #0x1200	
3 		ADDI r4, r0, #15 		
4 iterar: 	LW r5, #0x1000(r2) 	
5 		LW r6, #0x1004(r2) 		
6 		LW r7, #0x1008(r2)		
7 		LW r8, #0x10012(r2) 	
8 		LW r9, #0x10016(r2)		
9 		LW r10, #0x1200(r3) 	
10		LW r11, #0x1204(r3)		
11		LW r12, #0x1208(r3)		
12		LW r13, #0x1212(r3)		
13		LW r14, #0x1216(r3)		
13		ADDI r2, r2, #20 		
14		ADDI r3, r3, #20 
15	    SUBI r4, r4, #5		
16		SW -20(r3), r5 			
17		SW -16(r3), r6 			
18		SW -12(r3), r7 			
19		SW -8(r3), r8 			
20		SW -4(r3), r9 			
21		SW -20(r2), r10 		
22		SW -16(r2), r11 		
23		SW -12(r2), r12 		
24		SW -8(r2), r13 			
25		SW -4(r2), r14 			
26		BNEZ r4, iterar	
27		NOP		
28		TRAP 0

; Como hemos desenrollado 5 veces el bucle, el lazo se ejecuta 3 veces y no hay en él ninguna detención debido a dependencias de datos. Solo queda la detención por riesgo de control en la instrucción 25.